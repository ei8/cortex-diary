@using ei8.Cortex.Diary.Port.Adapter.IO.Process.Services.Identity
@using ei8.Cortex.Diary.Domain.Model
@inject ITokenProvider TokenProvider

@code {
    [Parameter]
    public InitialApplicationState InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        TokenProvider.XsrfToken = InitialState.XsrfToken;
        TokenProvider.AccessToken = InitialState.AccessToken;
        TokenProvider.RefreshToken = InitialState.RefreshToken;
        TokenProvider.ExpiresAt = InitialState.ExpiresAt;

        return base.OnInitializedAsync();
    }
}

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(BlazoriseLayout)" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(BlazoriseLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>